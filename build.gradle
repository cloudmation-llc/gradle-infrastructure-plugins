buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "pl.allegro.tech.build.axion-release" version "1.11.0"
    id "com.gradle.plugin-publish" version "0.11.0"
    id "java-gradle-plugin"
    id "groovy"
    id "maven-publish"
}

scmVersion {
    localOnly = true

    checks {
        uncommittedChanges = false
    }

    tag {
        prefix = ""
    }
}

project.version = scmVersion.version
sourceCompatibility = "1,8"
targetCompatibility = "1.8"

group "com.cloudmation"

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation platform("software.amazon.awssdk:bom:2.13.+")
    implementation "software.amazon.awssdk:cloudformation"
    implementation "software.amazon.awssdk:sts"
    implementation "org.apache.commons:commons-text:1.8"
    implementation "com.google.guava:guava:29.0-jre"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.+"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.+"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/cloudmation-llc/cloudmation-gradle-project-plugins")
            credentials {
                username = project.findProperty("com.cloudmation.ghp.username")
                password = project.findProperty("com.cloudmation.ghp.token")
            }
        }
    }

    publications {
        gradlePlugin(MavenPublication) {
            artifactId = "gradle-project-plugins"
            from components.java

            versionMapping {
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}

gradlePlugin {
    plugins {
        awsProject {
            id = "com.cloudmation.aws"
            displayName = "AWS Project"
            description = "A plugin that performs initial set up for a project which integrates with AWS"
            implementationClass = "com.cloudmation.gradle.aws.AwsProjectPlugin"
        }

        awsCloudformationSettings {
            id = "com.cloudmation.aws-settings-cloudformation"
            displayName = "AWS CloudFormation Settings"
            description = "A settings plugin that provides directory conventions and subproject configuration for AWS CloudFormation projects"
            implementationClass = "com.cloudmation.gradle.aws.cloudformation.CloudformationGradleSettingsPlugin"
        }

        awsCloudformationProject {
            id = "com.cloudmation.aws-cloudformation"
            displayName = "AWS CloudFormation Project"
            description = "A project plugin that generates configurable tasks for deploying stacks of resources with AWS CloudFormation"
            implementationClass = "com.cloudmation.gradle.aws.cloudformation.CloudformationProjectPlugin"
        }
    }
}

pluginBundle {
    website = "https://github.com/cloudmation-llc/gradle-infrastructure-plugins"
    vcsUrl = "https://github.com/cloudmation-llc/gradle-infrastructure-plugins"
    tags = ["aws", "cloudformation", "cloud"]
}

apply from: "docusaurus.gradle"